name: CI
on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install qemu-utils extlinux fdisk docker-ce containerd.io docker-buildx-plugin docker-compose-plugin
        run: |
          sudo apt-get update
          sudo apt-get install qemu-utils extlinux fdisk qemu-utils
          sudo apt-get install \
                       ca-certificates \
                      curl \
                      gnupg \
                      lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
               "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          
      - uses: actions/checkout@v3

      - name: Build image
        run: |
          sudo make debian
          sudo make ubuntu
          sudo make alpine
              
      - name: Convert to vmdk       
        run: |
          ls -la
          qemu-img convert -f qcow2 -O vmdk -o adapter_type=lsilogic,subformat=monolithicFlat alpine.qcow2 alpine.vmdk
      
              
      - name: Tar files
        run: tar -czf alpine.tar.gz alpine.qcow2 alpine.vmdk alpine-flat.vmdk

      - uses: actions/upload-artifact@v3
        with:
          path: alpine.tar.gz
      
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: alpine.tar.gz              
